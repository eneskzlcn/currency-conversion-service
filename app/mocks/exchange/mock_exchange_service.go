// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/eneskzlcn/currency-conversion-service/app/exchange (interfaces: ExchangeService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	exchange "github.com/eneskzlcn/currency-conversion-service/app/exchange"
	gomock "github.com/golang/mock/gomock"
)

// MockExchangeService is a mock of ExchangeService interface.
type MockExchangeService struct {
	ctrl     *gomock.Controller
	recorder *MockExchangeServiceMockRecorder
}

// MockExchangeServiceMockRecorder is the mock recorder for MockExchangeService.
type MockExchangeServiceMockRecorder struct {
	mock *MockExchangeService
}

// NewMockExchangeService creates a new mock instance.
func NewMockExchangeService(ctrl *gomock.Controller) *MockExchangeService {
	mock := &MockExchangeService{ctrl: ctrl}
	mock.recorder = &MockExchangeServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExchangeService) EXPECT() *MockExchangeServiceMockRecorder {
	return m.recorder
}

// PrepareExchangeRateOffer mocks base method.
func (m *MockExchangeService) PrepareExchangeRateOffer(arg0 context.Context, arg1 int, arg2 exchange.ExchangeRateRequest) (exchange.ExchangeRateOfferResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareExchangeRateOffer", arg0, arg1, arg2)
	ret0, _ := ret[0].(exchange.ExchangeRateOfferResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareExchangeRateOffer indicates an expected call of PrepareExchangeRateOffer.
func (mr *MockExchangeServiceMockRecorder) PrepareExchangeRateOffer(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareExchangeRateOffer", reflect.TypeOf((*MockExchangeService)(nil).PrepareExchangeRateOffer), arg0, arg1, arg2)
}
